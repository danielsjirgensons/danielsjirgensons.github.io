$black: #19191b;
$white: #ffffff;
$primary: #5454d4;
$secondary: #6565ff;
$darkGray: #696871;
$gray: #f7f7fb;

$themes: (
  'light': (
    "primary": $primary,
    "secondary": $secondary,
    "white": $white, 
    "black": $black, 
    "darkGray": $darkGray, 
  ), 
  'dark': (
    "primary": $secondary,
    "secondary": $primary,
    "white": $black, 
    "black": $white, 
    "darkGray": $gray, 
));

// $lightShadow: 0px 5px 15px 0px $lightBlack;
// $shadow: 0px 5px 15px 0px $mediumblack;
// $mediumShadow: 0px 5px 15px 0px rgba(0, 0, 0, 0.2);
$transition: 0.3s ease-in-out;

$white: #{"rgba(255,255,255,1)"};
$transparent: #{"rgba(255,255,255,0)"};

// vars
$lightClass: "theme-light";
$darkClass: "theme-dark";

$margin: 15px;
$smallMargin: calc($margin / 3); // 5px
$mediumMargin: 10px;
$bigMargin: $margin * 2; // 30px

$full: 100%;
$menuHeight: 65px;

@mixin themify($themes) {
    @each $theme, $map in $themes {
        body.theme-#{$theme} & {
            $theme-map: () !global;
            @each $key, $submap in $map {
                $value: map-get(map-get($themes, $theme), "#{$key}");
                $theme-map: map-merge(
                    $theme-map,
                    (
                        $key: $value,
                    )
                ) !global;
            }
            @content;
            $theme-map: null !global;
        }
    }
}

@mixin theme($property, $key, $themes: $themes) {
    @each $theme, $colors in $themes {
        body.theme-#{$theme} & {
            #{$property}: map-get($colors, $key);
        }
    }
}

@mixin color($arguments) {
    @include theme("color", $arguments);
}

@mixin border($arguments) {
    @include theme("border-color", $arguments);
}

@mixin background($arguments) {
    @include theme("background-color", $arguments);
}

@function themed($key) {
    @return map-get($theme-map, $key);
}
